<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="ethernet_8c" kind="file" language="C++">
    <compoundname>ethernet.c</compoundname>
    <includes refid="ethernet_8h" local="yes">ethernet.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_mac.h</includes>
    <includes local="yes">driver/spi_master.h</includes>
    <includes local="yes">driver/gpio.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c</label>
        <link refid="ethernet_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>driver/gpio.h</label>
      </node>
      <node id="8">
        <label>driver/spi_master.h</label>
      </node>
      <node id="3">
        <label>esp_eth.h</label>
      </node>
      <node id="5">
        <label>esp_event.h</label>
      </node>
      <node id="6">
        <label>esp_log.h</label>
      </node>
      <node id="7">
        <label>esp_mac.h</label>
      </node>
      <node id="4">
        <label>esp_netif.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="ethernet_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;ETHERNET&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="15" column="19" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" prot="public" static="yes" mutable="no">
        <type>esp_netif_t *</type>
        <definition>esp_netif_t* eth_netif</definition>
        <argsstring></argsstring>
        <name>eth_netif</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="18" column="20" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="18" bodyend="-1"/>
        <referencedby refid="ethernet_8h_1afcdc1ac7a161416f9aa70c6802794598" compoundref="ethernet_8c" startline="155" endline="169">ethernet_get_ip</referencedby>
        <referencedby refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" compoundref="ethernet_8c" startline="63" endline="125">ethernet_init</referencedby>
        <referencedby refid="ethernet_8h_1a864a2ddf998b216a85c97c640b841501" compoundref="ethernet_8c" startline="171" endline="203">ethernet_set_static_ip</referencedby>
      </memberdef>
      <memberdef kind="variable" id="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" prot="public" static="yes" mutable="no">
        <type>esp_eth_handle_t</type>
        <definition>esp_eth_handle_t eth_handle</definition>
        <argsstring></argsstring>
        <name>eth_handle</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="19" column="25" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="19" bodyend="-1"/>
        <referencedby refid="ethernet_8h_1a2ae9912b161cb0e12abb084e5d2756c2" compoundref="ethernet_8c" startline="22" endline="46">ethernet_event_handler</referencedby>
        <referencedby refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" compoundref="ethernet_8c" startline="63" endline="125">ethernet_init</referencedby>
        <referencedby refid="ethernet_8h_1a4f763d2ae63ab35e404488c1add5c852" compoundref="ethernet_8c" startline="127" endline="136">ethernet_start</referencedby>
        <referencedby refid="ethernet_8h_1a4039eaf3762551e4c7b70c07a8abe1a4" compoundref="ethernet_8c" startline="138" endline="148">ethernet_stop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ethernet_connected</definition>
        <argsstring></argsstring>
        <name>ethernet_connected</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="20" column="13" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="20" bodyend="-1"/>
        <referencedby refid="ethernet_8h_1a2ae9912b161cb0e12abb084e5d2756c2" compoundref="ethernet_8c" startline="22" endline="46">ethernet_event_handler</referencedby>
        <referencedby refid="ethernet_8h_1a413b14a7107939f76a186c5d459a4a84" compoundref="ethernet_8c" startline="150" endline="153">ethernet_is_connected</referencedby>
        <referencedby refid="ethernet_8h_1a4039eaf3762551e4c7b70c07a8abe1a4" compoundref="ethernet_8c" startline="138" endline="148">ethernet_stop</referencedby>
        <referencedby refid="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" compoundref="ethernet_8c" startline="48" endline="61">got_ip_event_handler</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ethernet_8c_1a2ae9912b161cb0e12abb084e5d2756c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ethernet_event_handler</definition>
        <argsstring>(void *arg, esp_event_base_t event_base, int32_t event_id, void *event_data)</argsstring>
        <name>ethernet_event_handler</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>esp_event_base_t</type>
          <declname>event_base</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>event_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>event_data</declname>
        </param>
        <briefdescription>
<para>Event handler for Ethernet events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Event handler argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_base</parametername>
</parameternamelist>
<parameterdescription>
<para>Event base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Event data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function handles Ethernet events such as connection status changes <simplesect kind="note"><para>It logs the events and updates the connection status </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="22" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="22" bodyend="46"/>
        <references refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" compoundref="ethernet_8c" startline="19">eth_handle</references>
        <references refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" compoundref="ethernet_8c" startline="20">ethernet_connected</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <referencedby refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" compoundref="ethernet_8c" startline="63" endline="125">ethernet_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void got_ip_event_handler</definition>
        <argsstring>(void *arg, esp_event_base_t event_base, int32_t event_id, void *event_data)</argsstring>
        <name>got_ip_event_handler</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>esp_event_base_t</type>
          <declname>event_base</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>event_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>event_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="48" column="13" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="48" bodyend="61"/>
        <references refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" compoundref="ethernet_8c" startline="20">ethernet_connected</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <referencedby refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" compoundref="ethernet_8c" startline="63" endline="125">ethernet_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1ac5a294a0efbd42bd9671903a60e4f52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ethernet_init</definition>
        <argsstring>(void)</argsstring>
        <name>ethernet_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the W5500 Ethernet module. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up SPI communication and initializes the W5500 chip <simplesect kind="return"><para>esp_err_t ESP_OK on success, error code otherwise </para>
</simplesect>
<simplesect kind="note"><para>This function must be called before starting the Ethernet connection </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="63" column="11" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="63" bodyend="125"/>
        <references refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" compoundref="ethernet_8c" startline="19">eth_handle</references>
        <references refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" compoundref="ethernet_8c" startline="18">eth_netif</references>
        <references refid="ethernet_8h_1a2ae9912b161cb0e12abb084e5d2756c2" compoundref="ethernet_8c" startline="22" endline="46">ethernet_event_handler</references>
        <references refid="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" compoundref="ethernet_8c" startline="48" endline="61">got_ip_event_handler</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <references refid="ethernet_8h_1aaca87d2e40f5e4f13e4d250f196a5fac" compoundref="ethernet_8h" startline="21">W5500_CS_GPIO</references>
        <references refid="ethernet_8h_1a495ea13f4aa3459d0c1dfb4d3083252b" compoundref="ethernet_8h" startline="20">W5500_MISO_GPIO</references>
        <references refid="ethernet_8h_1aaf35269321cce9cde911ab13c5bf2f1a" compoundref="ethernet_8h" startline="19">W5500_MOSI_GPIO</references>
        <references refid="ethernet_8h_1ac49ec3042b48b883e7900d9a234f207e" compoundref="ethernet_8h" startline="23">W5500_RST_GPIO</references>
        <references refid="ethernet_8h_1aa8798174188a78b90d0004bfbbdaf604" compoundref="ethernet_8h" startline="18">W5500_SCLK_GPIO</references>
        <references refid="ethernet_8h_1aa0aec6e526d34bcfe24f3358063215b9" compoundref="ethernet_8h" startline="17">W5500_SPI_HOST</references>
        <referencedby refid="system_8h_1a43f5e0d6db0fb41a437cc9096b32e9b5" compoundref="system_8c" startline="30" endline="54">system_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1a4f763d2ae63ab35e404488c1add5c852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ethernet_start</definition>
        <argsstring>(void)</argsstring>
        <name>ethernet_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Start the Ethernet connection. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the Ethernet interface and begins network connectivity <simplesect kind="return"><para>esp_err_t ESP_OK on success, error code otherwise </para>
</simplesect>
<simplesect kind="note"><para>This function should be called after <ref refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" kindref="member">ethernet_init()</ref> </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="127" column="11" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="127" bodyend="136"/>
        <references refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" compoundref="ethernet_8c" startline="19">eth_handle</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <referencedby refid="system_8h_1a43f5e0d6db0fb41a437cc9096b32e9b5" compoundref="system_8c" startline="30" endline="54">system_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1a4039eaf3762551e4c7b70c07a8abe1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ethernet_stop</definition>
        <argsstring>(void)</argsstring>
        <name>ethernet_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop the Ethernet connection. </para>
        </briefdescription>
        <detaileddescription>
<para>Stops the Ethernet interface <simplesect kind="return"><para>esp_err_t ESP_OK on success, error code otherwise </para>
</simplesect>
<simplesect kind="note"><para>This function should be called to cleanly stop the Ethernet connection </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="138" column="11" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="138" bodyend="148"/>
        <references refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" compoundref="ethernet_8c" startline="19">eth_handle</references>
        <references refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" compoundref="ethernet_8c" startline="20">ethernet_connected</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1a413b14a7107939f76a186c5d459a4a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ethernet_is_connected</definition>
        <argsstring>(void)</argsstring>
        <name>ethernet_is_connected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if Ethernet is connected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if connected, false otherwise</para>
</simplesect>
This function checks the current connection status of the Ethernet interface <simplesect kind="note"><para>This function can be used to determine if the Ethernet connection is active </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="150" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="150" bodyend="153"/>
        <references refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" compoundref="ethernet_8c" startline="20">ethernet_connected</references>
        <referencedby refid="tasks_8h_1a5dc1efd0c548644645cf4607e8e01ae0" compoundref="tasks_8c" startline="128" endline="152">ethernet_monitor_task</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1afcdc1ac7a161416f9aa70c6802794598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ethernet_get_ip</definition>
        <argsstring>(char *ip_str)</argsstring>
        <name>ethernet_get_ip</name>
        <param>
          <type>char *</type>
          <declname>ip_str</declname>
        </param>
        <briefdescription>
<para>Get the IP address assigned to the Ethernet interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip_str</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the IP address string (minimum 16 bytes) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success, error code otherwise</para>
</simplesect>
This function retrieves the current IP address of the Ethernet interface <simplesect kind="note"><para>The IP address is returned in standard dotted-decimal format </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="155" column="11" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="155" bodyend="169"/>
        <references refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" compoundref="ethernet_8c" startline="18">eth_netif</references>
        <referencedby refid="tasks_8h_1a5dc1efd0c548644645cf4607e8e01ae0" compoundref="tasks_8c" startline="128" endline="152">ethernet_monitor_task</referencedby>
      </memberdef>
      <memberdef kind="function" id="ethernet_8c_1a864a2ddf998b216a85c97c640b841501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ethernet_set_static_ip</definition>
        <argsstring>(void)</argsstring>
        <name>ethernet_set_static_ip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Configure static IP settings for the Ethernet interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up static IP configuration instead of DHCP <simplesect kind="return"><para>esp_err_t ESP_OK on success, error code otherwise </para>
</simplesect>
<simplesect kind="note"><para>This function should be called after <ref refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" kindref="member">ethernet_init()</ref> but before <ref refid="ethernet_8h_1a4f763d2ae63ab35e404488c1add5c852" kindref="member">ethernet_start()</ref> </para>
</simplesect>
<simplesect kind="author"><para>Ernesto Estrada </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025 </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" line="171" column="11" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c" bodystart="171" bodyend="203"/>
        <references refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" compoundref="ethernet_8c" startline="18">eth_netif</references>
        <references refid="ethernet_8h_1ae8d8c06f0e4668e677b3625c937744c5" compoundref="ethernet_8h" startline="30">STATIC_GATEWAY_ADDR</references>
        <references refid="ethernet_8h_1ab9283eb38c098765c10d2029af6f1f7b" compoundref="ethernet_8h" startline="29">STATIC_IP_ADDR</references>
        <references refid="ethernet_8h_1a4db47e739ac129a07a381b875807af0c" compoundref="ethernet_8h" startline="31">STATIC_NETMASK_ADDR</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <referencedby refid="system_8h_1a43f5e0d6db0fb41a437cc9096b32e9b5" compoundref="system_8c" startline="30" endline="54">system_init</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Project:<sp/>AERtronic<sp/>Lite<sp/>2.0</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Ethernet<sp/>W5500<sp/>module<sp/>implementation<sp/>for<sp/>ESP32</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Ernesto<sp/>Estrada</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Company:<sp/>Aerzener<sp/>Maschinenfabrik<sp/>GmbH</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Date:<sp/>July<sp/>2,<sp/>2025</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ethernet_8h" kindref="compound">ethernet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_mac.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/spi_master.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="ethernet_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ETHERNET&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>esp_netif_t<sp/>*<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="19" refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>esp_eth_handle_t<sp/><ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="20" refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" kindref="member">ethernet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="ethernet_8h_1a2ae9912b161cb0e12abb084e5d2756c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ethernet_8c_1a2ae9912b161cb0e12abb084e5d2756c2" kindref="member">ethernet_event_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg,<sp/>esp_event_base_t<sp/>event_base,<sp/>int32_t<sp/>event_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*event_data)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mac_addr[6]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_eth_ioctl(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref>,<sp/>ETH_CMD_G_MAC_ADDR,<sp/>mac_addr);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event_id)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ETHERNET_EVENT_CONNECTED:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>Link<sp/>Up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>HW<sp/>Addr<sp/>%02x:%02x:%02x:%02x:%02x:%02x&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mac_addr[0],<sp/>mac_addr[1],<sp/>mac_addr[2],<sp/>mac_addr[3],<sp/>mac_addr[4],<sp/>mac_addr[5]);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ETHERNET_EVENT_DISCONNECTED:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>Link<sp/>Down&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" kindref="member">ethernet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ETHERNET_EVENT_START:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>Started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ETHERNET_EVENT_STOP:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>Stopped&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" kindref="member">got_ip_event_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg,<sp/>esp_event_base_t<sp/>event_base,<sp/>int32_t<sp/>event_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*event_data)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ip_event_got_ip_t<sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>(ip_event_got_ip_t<sp/>*)<sp/>event_data;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>esp_netif_ip_info_t<sp/>*ip_info<sp/>=<sp/>&amp;</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ip_info;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>Got<sp/>IP<sp/>Address&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;~~~~~~~~~~~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ETHIP:&quot;</highlight><highlight class="normal"><sp/>IPSTR,<sp/>IP2STR(&amp;ip_info-&gt;ip));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ETHMASK:&quot;</highlight><highlight class="normal"><sp/>IPSTR,<sp/>IP2STR(&amp;ip_info-&gt;netmask));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ETHGW:&quot;</highlight><highlight class="normal"><sp/>IPSTR,<sp/>IP2STR(&amp;ip_info-&gt;gw));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;~~~~~~~~~~~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" kindref="member">ethernet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="ethernet_8h_1ac5a294a0efbd42bd9671903a60e4f52b" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="ethernet_8c_1ac5a294a0efbd42bd9671903a60e4f52b" kindref="member">ethernet_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>W5500<sp/>Ethernet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>TCP/IP<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(esp_netif_init());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>default<sp/>event<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(esp_event_loop_create_default());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>default<sp/>instance<sp/>of<sp/>esp-netif<sp/>for<sp/>Ethernet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_config_t<sp/>cfg<sp/>=<sp/>ESP_NETIF_DEFAULT_ETH();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref><sp/>=<sp/>esp_netif_new(&amp;cfg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>user<sp/>defined<sp/>event<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(esp_event_handler_register(ETH_EVENT,<sp/>ESP_EVENT_ANY_ID,<sp/>&amp;<ref refid="ethernet_8h_1a2ae9912b161cb0e12abb084e5d2756c2" kindref="member">ethernet_event_handler</ref>,<sp/>NULL));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(esp_event_handler_register(IP_EVENT,<sp/>IP_EVENT_ETH_GOT_IP,<sp/>&amp;<ref refid="ethernet_8c_1a00e93e9c4cda2c8a6aac16b5bc195a09" kindref="member">got_ip_event_handler</ref>,<sp/>NULL));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>SPI<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_bus_config_t<sp/>buscfg<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.miso_io_num<sp/>=<sp/><ref refid="ethernet_8h_1a495ea13f4aa3459d0c1dfb4d3083252b" kindref="member">W5500_MISO_GPIO</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mosi_io_num<sp/>=<sp/><ref refid="ethernet_8h_1aaf35269321cce9cde911ab13c5bf2f1a" kindref="member">W5500_MOSI_GPIO</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sclk_io_num<sp/>=<sp/><ref refid="ethernet_8h_1aa8798174188a78b90d0004bfbbdaf604" kindref="member">W5500_SCLK_GPIO</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.quadwp_io_num<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.quadhd_io_num<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(spi_bus_initialize(<ref refid="ethernet_8h_1aa0aec6e526d34bcfe24f3358063215b9" kindref="member">W5500_SPI_HOST</ref>,<sp/>&amp;buscfg,<sp/>SPI_DMA_CH_AUTO));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>W5500<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_device_interface_config_t<sp/>devcfg<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.command_bits<sp/>=<sp/>16,<sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>it&apos;s<sp/>the<sp/>address<sp/>phase<sp/>in<sp/>W5500<sp/>SPI<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.address_bits<sp/>=<sp/>8,<sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>it&apos;s<sp/>the<sp/>control<sp/>phase<sp/>in<sp/>W5500<sp/>SPI<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mode<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clock_speed_hz<sp/>=<sp/>12<sp/>*<sp/>1000<sp/>*<sp/>1000,<sp/></highlight><highlight class="comment">//<sp/>12<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spics_io_num<sp/>=<sp/><ref refid="ethernet_8h_1aaca87d2e40f5e4f13e4d250f196a5fac" kindref="member">W5500_CS_GPIO</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.queue_size<sp/>=<sp/>20</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>W5500<sp/>Ethernet<sp/>MAC<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eth_w5500_config_t<sp/>w5500_config<sp/>=<sp/>ETH_W5500_DEFAULT_CONFIG(W5500_SPI_HOST,<sp/>&amp;devcfg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//w5500_config.int_gpio_num<sp/>=<sp/>W5500_INT_GPIO;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAC<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>eth_mac_config_t<sp/>mac_config<sp/>=<sp/>ETH_MAC_DEFAULT_CONFIG();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//esp_eth_mac_t<sp/>*mac<sp/>=<sp/>esp_eth_mac_new_w5500(&amp;w5500_config,<sp/>&amp;mac_config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>W5500<sp/>Ethernet<sp/>PHY<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>eth_phy_config_t<sp/>phy_config<sp/>=<sp/>ETH_PHY_DEFAULT_CONFIG();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>phy_config.phy_addr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>phy_config.reset_gpio_num<sp/>=<sp/><ref refid="ethernet_8h_1ac49ec3042b48b883e7900d9a234f207e" kindref="member">W5500_RST_GPIO</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//esp_eth_phy_t<sp/>*phy<sp/>=<sp/>esp_eth_phy_new_w5500(&amp;phy_config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>Ethernet<sp/>driver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//esp_eth_config_t<sp/>config<sp/>=<sp/>ETH_DEFAULT_CONFIG(mac,<sp/>phy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_ERROR_CHECK(esp_eth_driver_install(&amp;config,<sp/>&amp;eth_handle));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>Ethernet<sp/>driver<sp/>to<sp/>TCP/IP<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*eth_netif_glue<sp/>=<sp/>esp_eth_new_netif_glue(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(esp_netif_attach(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref>,<sp/>eth_netif_glue));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;W5500<sp/>Ethernet<sp/>initialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="ethernet_8h_1a4f763d2ae63ab35e404488c1add5c852" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="ethernet_8c_1a4f763d2ae63ab35e404488c1add5c852" kindref="member">ethernet_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>Ethernet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>esp_eth_start(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="ethernet_8h_1a4039eaf3762551e4c7b70c07a8abe1a4" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="ethernet_8c_1a4039eaf3762551e4c7b70c07a8abe1a4" kindref="member">ethernet_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Stopping<sp/>Ethernet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" kindref="member">ethernet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>esp_eth_stop(<ref refid="ethernet_8c_1a2de8665296107d26a2a527034e0bf2f9" kindref="member">eth_handle</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="ethernet_8h_1a413b14a7107939f76a186c5d459a4a84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ethernet_8c_1a413b14a7107939f76a186c5d459a4a84" kindref="member">ethernet_is_connected</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ethernet_8c_1a7ca5d8cb100a666f2b459a70e2637554" kindref="member">ethernet_connected</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="ethernet_8h_1afcdc1ac7a161416f9aa70c6802794598" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="ethernet_8c_1afcdc1ac7a161416f9aa70c6802794598" kindref="member">ethernet_get_ip</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip_str)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref><sp/>==<sp/>NULL<sp/>||<sp/>ip_str<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_ip_info_t<sp/>ip_info;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>esp_netif_get_ip_info(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref>,<sp/>&amp;ip_info);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(ip_str,<sp/>IPSTR,<sp/>IP2STR(&amp;ip_info.ip));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="ethernet_8h_1a864a2ddf998b216a85c97c640b841501" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="ethernet_8c_1a864a2ddf998b216a85c97c640b841501" kindref="member">ethernet_set_static_ip</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>netif<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Configuring<sp/>static<sp/>IP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="ethernet_8h_1ab9283eb38c098765c10d2029af6f1f7b" kindref="member">STATIC_IP_ADDR</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>DHCP<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_dhcpc_stop(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>static<sp/>IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_ip_info_t<sp/>ip_info;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>string<sp/>IP<sp/>addresses<sp/>to<sp/>esp_ip4_addr_t<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_str_to_ip4(<ref refid="ethernet_8h_1ab9283eb38c098765c10d2029af6f1f7b" kindref="member">STATIC_IP_ADDR</ref>,<sp/>&amp;ip_info.ip);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_str_to_ip4(<ref refid="ethernet_8h_1ae8d8c06f0e4668e677b3625c937744c5" kindref="member">STATIC_GATEWAY_ADDR</ref>,<sp/>&amp;ip_info.gw);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_netif_str_to_ip4(<ref refid="ethernet_8h_1a4db47e739ac129a07a381b875807af0c" kindref="member">STATIC_NETMASK_ADDR</ref>,<sp/>&amp;ip_info.netmask);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>esp_netif_set_ip_info(<ref refid="ethernet_8c_1a9ea2954ad22025318d0d8e31236cc8b3" kindref="member">eth_netif</ref>,<sp/>&amp;ip_info);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>static<sp/>IP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Static<sp/>IP<sp/>configured<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;IP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="ethernet_8h_1ab9283eb38c098765c10d2029af6f1f7b" kindref="member">STATIC_IP_ADDR</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Gateway:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="ethernet_8h_1ae8d8c06f0e4668e677b3625c937744c5" kindref="member">STATIC_GATEWAY_ADDR</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Netmask:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="ethernet_8h_1a4db47e739ac129a07a381b875807af0c" kindref="member">STATIC_NETMASK_ADDR</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/ethernet.c"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="tasks_8c" kind="file" language="C++">
    <compoundname>tasks.c</compoundname>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes refid="tasks_8h" local="yes">tasks.h</includes>
    <includes refid="serial__receive_8h" local="yes">serial_receive.h</includes>
    <includes refid="time__manager_8h" local="yes">time_manager.h</includes>
    <includes refid="system_8h" local="yes">system.h</includes>
    <includes refid="serial__send_8h" local="yes">serial_send.h</includes>
    <includes refid="pages_8h" local="yes">pages.h</includes>
    <includes refid="sensors_8h" local="yes">sensors.h</includes>
    <includes refid="ethernet_8h" local="yes">ethernet.h</includes>
    <includes local="yes">esp_log.h</includes>
    <incdepgraph>
      <node id="12">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>pages.h</label>
        <link refid="pages_8h"/>
      </node>
      <node id="9">
        <label>sensors.h</label>
        <link refid="sensors_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>serial_receive.h</label>
        <link refid="serial__receive_8h"/>
      </node>
      <node id="16">
        <label>serial_send.h</label>
        <link refid="serial__send_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>system.h</label>
        <link refid="system_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tasks.h</label>
        <link refid="tasks_8h"/>
      </node>
      <node id="6">
        <label>time_manager.h</label>
        <link refid="time__manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c</label>
        <link refid="tasks_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>esp_err.h</label>
      </node>
      <node id="13">
        <label>esp_eth.h</label>
      </node>
      <node id="15">
        <label>esp_event.h</label>
      </node>
      <node id="18">
        <label>esp_log.h</label>
      </node>
      <node id="14">
        <label>esp_netif.h</label>
      </node>
      <node id="2">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="3">
        <label>freertos/task.h</label>
      </node>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="tasks_8c_1aad854cfa5843c0cce14548556d98ddad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void serial_read_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>serial_read_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the serial read task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. It is designed to be used as a FreeRTOS task, which continuously reads data from the serial port. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 6, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="13" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="13" bodyend="18"/>
        <references refid="serial__receive_8h_1ac59bf1ef42c41a76073468fec8e82d74" compoundref="serial__receive_8c" startline="20" endline="56">serial_read</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1a38055df7c19e6b62d4d08d631dace3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void operation_time_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>operation_time_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the operation time task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. It is designed to be used as a FreeRTOS task, which updates the operation time of the system. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 16, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="20" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="20" bodyend="25"/>
        <references refid="system_8h_1a3f45cb82b07f9844b825d73f091413a7" compoundref="system_8c" startline="56" endline="79">operation_time</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1af6775fd71f463f5b4bd0281831adf189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_date_task</definition>
        <argsstring>(void *pvParamerters)</argsstring>
        <name>update_date_task</name>
        <param>
          <type>void *</type>
          <declname>pvParamerters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the update date task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called fromt the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 6, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="27" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="27" bodyend="34"/>
        <references refid="time__manager_8h_1a7adef7574674ceb8389ad51f9865a608" compoundref="time__manager_8c" startline="48" endline="80">format_current_date</references>
        <references refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" compoundref="serial__send_8c" startline="52" endline="56">send_global_object</references>
        <references refid="system_8h_1a10a3fa33bae024190264a8321128a41d" compoundref="system_8c" startline="18">system_language</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1a472adbe140ea6041c1ce89683a293e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_time_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>update_time_task</name>
        <param>
          <type>void *</type>
          <declname>pvpParameters</declname>
          <defname>pvParameters</defname>
        </param>
        <briefdescription>
<para>Wrapper function for the update time task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 6, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="36" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="36" bodyend="43"/>
        <references refid="time__manager_8h_1aa10b7c32c7bb9654c6d13256ba88e217" compoundref="time__manager_8c" startline="31" endline="46">format_current_time</references>
        <references refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" compoundref="serial__send_8c" startline="52" endline="56">send_global_object</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1adc13c768c3882c534ba57bad636776ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sensor_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>sensor_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the sensor task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 6, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="45" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="45" bodyend="59"/>
        <references refid="sensors_8h_1a9456bf17ccbaf37989d9a869c891a294" compoundref="sensors_8c" startline="61" endline="122">sensors_read</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1aca31737b112ac097a245cc89d88a7f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void status_update_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>status_update_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the status update task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. It is designed to update the system status based on sensor data and user interactions. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 18, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="61" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="61" bodyend="67"/>
        <references refid="system_8h_1a97ec9415a474734bbfe4819763f72c3f" compoundref="system_8c" startline="190" endline="208">update_header</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1a38934c613f9e3b3071370604aa661010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ui_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>ui_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the UI task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. It is designed to handle user interface interactions and updates. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>June 6, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="69" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="69" bodyend="126"/>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58aaef4dc1e4f450a4c9e61a3699d75af0a" compoundref="pages_8h" startline="17">ABOUT</references>
        <references refid="pages_8h_1a89fee45a3872eb376b252b861ab8c07e" compoundref="pages_8c" startline="53" endline="55">about_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a09d06a1d7569f0d7df95702b87278489" compoundref="pages_8h" startline="12">CONFIG_MENU</references>
        <references refid="pages_8h_1a96592eefdfdf59eb98544da393fe2c8f" compoundref="pages_8c" startline="33" endline="35">config_menu_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58af722a5faa36087c914da53ebe4711f08" compoundref="pages_8h" startline="13">CONTROL</references>
        <references refid="pages_8h_1abc67177785d78d87195c128dae5c71e1" compoundref="pages_8c" startline="37" endline="39">control_page</references>
        <references refid="pages_8h_1ad3dbd5a2ff3dafed0fcdb227d018e091" compoundref="serial__receive_8c" startline="17">current_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a495f3a2e1ce970ceba725978599c5b8a" compoundref="pages_8h" startline="7">EQUIPMENT_INFO</references>
        <references refid="pages_8h_1adb7e72ea57300775da4604fc0beb6ced" compoundref="pages_8c" startline="13" endline="15">equipment_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ab0814cb9deac69bea037955cecf9b2c4" compoundref="pages_8h" startline="11">LANGUAGE</references>
        <references refid="pages_8h_1a6d91875cb7f48bd2dab021a271b8569e" compoundref="pages_8c" startline="29" endline="31">language_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ae50ef0288ee11ef27d19d69fc8e2a121" compoundref="pages_8h" startline="9">LOG_IN</references>
        <references refid="pages_8h_1ad114f02439a8b6bac8809faab054722e" compoundref="pages_8c" startline="21" endline="23">login_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58adf02ded475565758943c5d421224efec" compoundref="pages_8h" startline="15">MACHINE</references>
        <references refid="pages_8h_1a828e576a7d6d5cddff3ebd05ddc6685a" compoundref="pages_8c" startline="45" endline="47">machine_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a41c6eb506ccf657cc7e958c8e8c769cd" compoundref="pages_8h" startline="5">MAIN</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ac22743f1fc74de09544ecc9bab74a17b" compoundref="pages_8h" startline="6">MAIN_MENU</references>
        <references refid="pages_8h_1a222f933f83745f908d2be52694fec0f0" compoundref="pages_8c" startline="9" endline="11">main_menu_page</references>
        <references refid="pages_8h_1a97b680dc869c646b03f34ad2a3260a6b" compoundref="pages_8c" startline="5" endline="7">main_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a6e79df44a2025f7b4a2822e608389c58" compoundref="pages_8h" startline="10">MAINTENANCE</references>
        <references refid="pages_8h_1a7f50faf504e3d70c18cca6de2309ae9f" compoundref="pages_8c" startline="25" endline="27">maintenance_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ad8b12610bd58f48af24ed720cb166805" compoundref="pages_8h" startline="8">MODULE_INFO</references>
        <references refid="pages_8h_1ab7c27bc6f6c1a38a98f6ae4f21109bae" compoundref="pages_8c" startline="17" endline="19">module_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ad6a3d48ea292eaa3be05d8aa02248153" compoundref="pages_8h" startline="19">NO_PAGE</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a5f6d448017ecd0a56245e38b76596e07" compoundref="pages_8h" startline="14">SERVICE</references>
        <references refid="pages_8h_1a5a1c65a52fcb4b65ae9b394a013e0dbd" compoundref="pages_8c" startline="41" endline="43">service_page</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a57cc238145ec1361c72c327674c0d754" compoundref="pages_8h" startline="16">SYSTEM</references>
        <references refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a4d99d5a96cbadbc56944a179561deb74" compoundref="pages_8h" startline="18">SYSTEM_EVENTS</references>
        <references refid="pages_8h_1a80034c559e6388a025a88d0959456792" compoundref="pages_8c" startline="57" endline="59">system_events_page</references>
        <references refid="pages_8h_1a6dbb6384cdbff807810e3808aa4892b4" compoundref="pages_8c" startline="49" endline="51">system_page</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="tasks_8c_1a5dc1efd0c548644645cf4607e8e01ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ethernet_monitor_task</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>ethernet_monitor_task</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>Wrapper function for the ethernet monitoring task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from the FreeRTOS task scheduler. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function does not return any value. It is designed to monitor the ethernet connection status and handle reconnections. <simplesect kind="author"><para>Ernesto Estrada. </para>
</simplesect>
<simplesect kind="date"><para>July 2, 2025. </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="warning"><para>This function should not be called directly; it is intended to be used as a FreeRTOS task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" line="128" column="6" bodyfile="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c" bodystart="128" bodyend="152"/>
        <references refid="ethernet_8h_1afcdc1ac7a161416f9aa70c6802794598" compoundref="ethernet_8c" startline="155" endline="169">ethernet_get_ip</references>
        <references refid="ethernet_8h_1a413b14a7107939f76a186c5d459a4a84" compoundref="ethernet_8c" startline="150" endline="153">ethernet_is_connected</references>
        <references refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" compoundref="serial__send_8c" startline="52" endline="56">send_global_object</references>
        <references refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" compoundref="nvs__manager_8c" startline="8">TAG</references>
        <referencedby refid="main_8c_1a630544a7f0a2cc40d8a7fefab7e2fe70" compoundref="main_8c" startline="28" endline="47">app_main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tasks_8h" kindref="compound">tasks.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serial__receive_8h" kindref="compound">serial_receive.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__manager_8h" kindref="compound">time_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="system_8h" kindref="compound">system.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serial__send_8h" kindref="compound">serial_send.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pages_8h" kindref="compound">pages.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sensors_8h" kindref="compound">sensors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ethernet_8h" kindref="compound">ethernet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="tasks_8h_1aad854cfa5843c0cce14548556d98ddad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1aad854cfa5843c0cce14548556d98ddad" kindref="member">serial_read_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial__receive_8h_1ac59bf1ef42c41a76073468fec8e82d74" kindref="member">serial_read</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>serial<sp/>read<sp/>function<sp/>to<sp/>process<sp/>incoming<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(20));<sp/></highlight><highlight class="comment">//<sp/>Short<sp/>delay<sp/>to<sp/>yeild<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="tasks_8h_1a38055df7c19e6b62d4d08d631dace3bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1a38055df7c19e6b62d4d08d631dace3bb" kindref="member">operation_time_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="system_8h_1a3f45cb82b07f9844b825d73f091413a7" kindref="member">operation_time</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>operation<sp/>time<sp/>based<sp/>on<sp/>the<sp/>system&apos;s<sp/>uptime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>1<sp/>second<sp/>before<sp/>updating<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="tasks_8h_1af6775fd71f463f5b4bd0281831adf189" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1af6775fd71f463f5b4bd0281831adf189" kindref="member">update_date_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParamerters)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date<sp/>=<sp/><ref refid="time__manager_8h_1a7adef7574674ceb8389ad51f9865a608" kindref="member">format_current_date</ref>(<ref refid="system_8h_1a10a3fa33bae024190264a8321128a41d" kindref="member">system_language</ref>);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>formatted<sp/>date<sp/>string<sp/>based<sp/>on<sp/>the<sp/>system<sp/>language.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" kindref="member">send_global_object</ref>(</highlight><highlight class="stringliteral">&quot;tDate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">,<sp/>date);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>formatted<sp/>date<sp/>to<sp/>the<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="tasks_8h_1adfc61f610137566e1a44bca38c2fb368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1a472adbe140ea6041c1ce89683a293e8e" kindref="member">update_time_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>time<sp/>=<sp/><ref refid="time__manager_8h_1aa10b7c32c7bb9654c6d13256ba88e217" kindref="member">format_current_time</ref>();<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>formatted<sp/>time<sp/>string<sp/>in<sp/>12-hour<sp/>format<sp/>with<sp/>AM/PM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" kindref="member">send_global_object</ref>(</highlight><highlight class="stringliteral">&quot;tTime&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">,<sp/>time);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>formatted<sp/>time<sp/>to<sp/>the<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>1<sp/>second<sp/>before<sp/>updating<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="tasks_8h_1adc13c768c3882c534ba57bad636776ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1adc13c768c3882c534ba57bad636776ce" kindref="member">sensor_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsensor__data__t" kindref="compound">sensor_data_t</ref><sp/>data;<sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>struct<sp/>to<sp/>hold<sp/>sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sensors_8h_1a9456bf17ccbaf37989d9a869c891a294" kindref="member">sensors_read</ref>(&amp;data);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>need<sp/>to<sp/>share<sp/>this<sp/>data,<sp/>copy<sp/>it<sp/>to<sp/>a<sp/>shared<sp/>struct<sp/>or<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional:<sp/>log<sp/>for<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Sensor<sp/>Readings<sp/>-&gt;<sp/>P1:<sp/>%.2f<sp/>mA,<sp/>P2:<sp/>%.2f<sp/>mA,<sp/>Temp:<sp/>%.2f<sp/>°C\n&quot;,<sp/>data.pressure1_mbar,<sp/>data.pressure2_mbar,<sp/>data.temperature_C);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>1<sp/>second<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="tasks_8h_1aca31737b112ac097a245cc89d88a7f06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1aca31737b112ac097a245cc89d88a7f06" kindref="member">status_update_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="system_8h_1a97ec9415a474734bbfe4819763f72c3f" kindref="member">update_header</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>header<sp/>on<sp/>the<sp/>Nextion<sp/>display<sp/>based<sp/>on<sp/>the<sp/>current<sp/>system<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>1<sp/>second<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="tasks_8h_1a38934c613f9e3b3071370604aa661010" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1a38934c613f9e3b3071370604aa661010" kindref="member">ui_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>last_wake_time<sp/>=<sp/>xTaskGetTickCount();<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>tick<sp/>count<sp/>for<sp/>task<sp/>scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelayUntil(&amp;last_wake_time,<sp/>pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>Delay<sp/>the<sp/>task<sp/>for<sp/>1<sp/>second<sp/>to<sp/>control<sp/>the<sp/>UI<sp/>update<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>current<sp/>page<sp/>and<sp/>call<sp/>the<sp/>appropriate<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>UI<sp/>for<sp/>that<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="pages_8h_1ad3dbd5a2ff3dafed0fcdb227d018e091" kindref="member">current_page</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a41c6eb506ccf657cc7e958c8e8c769cd" kindref="member">MAIN</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a97b680dc869c646b03f34ad2a3260a6b" kindref="member">main_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>home<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ac22743f1fc74de09544ecc9bab74a17b" kindref="member">MAIN_MENU</ref>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a222f933f83745f908d2be52694fec0f0" kindref="member">main_menu_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>settings<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a495f3a2e1ce970ceba725978599c5b8a" kindref="member">EQUIPMENT_INFO</ref>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1adb7e72ea57300775da4604fc0beb6ced" kindref="member">equipment_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>logs<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ad8b12610bd58f48af24ed720cb166805" kindref="member">MODULE_INFO</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1ab7c27bc6f6c1a38a98f6ae4f21109bae" kindref="member">module_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>about<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ae50ef0288ee11ef27d19d69fc8e2a121" kindref="member">LOG_IN</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1ad114f02439a8b6bac8809faab054722e" kindref="member">login_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>login<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a6e79df44a2025f7b4a2822e608389c58" kindref="member">MAINTENANCE</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a7f50faf504e3d70c18cca6de2309ae9f" kindref="member">maintenance_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>maintenance<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ab0814cb9deac69bea037955cecf9b2c4" kindref="member">LANGUAGE</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a6d91875cb7f48bd2dab021a271b8569e" kindref="member">language_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>language<sp/>selection<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a09d06a1d7569f0d7df95702b87278489" kindref="member">CONFIG_MENU</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a96592eefdfdf59eb98544da393fe2c8f" kindref="member">config_menu_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>configuration<sp/>menu<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58af722a5faa36087c914da53ebe4711f08" kindref="member">CONTROL</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1abc67177785d78d87195c128dae5c71e1" kindref="member">control_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>control<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a5f6d448017ecd0a56245e38b76596e07" kindref="member">SERVICE</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a5a1c65a52fcb4b65ae9b394a013e0dbd" kindref="member">service_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>service<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58adf02ded475565758943c5d421224efec" kindref="member">MACHINE</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a828e576a7d6d5cddff3ebd05ddc6685a" kindref="member">machine_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>machine<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a57cc238145ec1361c72c327674c0d754" kindref="member">SYSTEM</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a6dbb6384cdbff807810e3808aa4892b4" kindref="member">system_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>system<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58aaef4dc1e4f450a4c9e61a3699d75af0a" kindref="member">ABOUT</ref>:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a89fee45a3872eb376b252b861ab8c07e" kindref="member">about_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>about<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58a4d99d5a96cbadbc56944a179561deb74" kindref="member">SYSTEM_EVENTS</ref>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pages_8h_1a80034c559e6388a025a88d0959456792" kindref="member">system_events_page</ref>();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>function<sp/>to<sp/>handle<sp/>the<sp/>system<sp/>events<sp/>page<sp/>UI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pages_8h_1a65c296e040e660e12495c13450d8dc58ad6a3d48ea292eaa3be05d8aa02248153" kindref="member">NO_PAGE</ref>:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>action<sp/>needed<sp/>for<sp/>NO_PAGE,<sp/>can<sp/>be<sp/>used<sp/>to<sp/>indicate<sp/>no<sp/>active<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>unknown<sp/>page<sp/>or<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="tasks_8h_1a5dc1efd0c548644645cf4607e8e01ae0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tasks_8c_1a5dc1efd0c548644645cf4607e8e01ae0" kindref="member">ethernet_monitor_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ETH_MONITOR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ip_str[16];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8h_1a413b14a7107939f76a186c5d459a4a84" kindref="member">ethernet_is_connected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>log<sp/>IP<sp/>address<sp/>periodically<sp/>when<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ethernet_8h_1afcdc1ac7a161416f9aa70c6802794598" kindref="member">ethernet_get_ip</ref>(ip_str)<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>USE_STATIC_IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>connected<sp/>with<sp/>Static<sp/>IP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ip_str);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>connected<sp/>with<sp/>DHCP<sp/>IP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ip_str);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>IP<sp/>to<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" kindref="member">send_global_object</ref>(</highlight><highlight class="stringliteral">&quot;tEthIP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">,<sp/>ip_str);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="nvs__manager_8c_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Ethernet<sp/>disconnected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>disconnected<sp/>status<sp/>to<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="serial__send_8h_1a5054d67ac4b50fb8e90972bd55049e3f" kindref="member">send_global_object</ref>(</highlight><highlight class="stringliteral">&quot;tEthIP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Disconnected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10000));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>every<sp/>10<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Hammurabi.Sierra/Documents/GIT/AERtronic_Lite_2.0/ESP-IDF/Aertronic_Lite/main/tasks.c"/>
  </compounddef>
</doxygen>
